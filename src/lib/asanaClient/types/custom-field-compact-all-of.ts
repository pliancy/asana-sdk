/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { EnumOption } from './enum-option';

/**
 * Custom Fields store the metadata that is used in order to add user-specified information to tasks in Asana. Be sure to reference the [Custom Fields](/docs/asana-custom-fields) developer documentation for more information about how custom fields relate to various resources in Asana.  Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields), which will make them read-only when accessed by other users. Attempting to edit a locked custom field will return HTTP error code `403 Forbidden`.
 * @export
 * @interface CustomFieldCompactAllOf
 */
export interface CustomFieldCompactAllOf {
    /**
     * The name of the custom field.
     * @type {string}
     * @memberof CustomFieldCompactAllOf
     */
    'name'?: string;
    /**
     * The type of the custom field. Must be one of the given values. 
     * @type {string}
     * @memberof CustomFieldCompactAllOf
     */
    'resource_subtype'?: CustomFieldCompactAllOfResourceSubtypeEnum;
    /**
     * *Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values. 
     * @type {string}
     * @memberof CustomFieldCompactAllOf
     */
    'type'?: CustomFieldCompactAllOfTypeEnum;
    /**
     * *Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/docs/create-an-enum-option).
     * @type {Array<EnumOption>}
     * @memberof CustomFieldCompactAllOf
     */
    'enum_options'?: Array<EnumOption>;
    /**
     * *Conditional*. Determines if the custom field is enabled or not.
     * @type {boolean}
     * @memberof CustomFieldCompactAllOf
     */
    'enabled'?: boolean;
    /**
     * *Conditional*. This number is the value of a number custom field.
     * @type {number}
     * @memberof CustomFieldCompactAllOf
     */
    'number_value'?: number;
    /**
     * *Conditional*. This string is the value of a text custom field.
     * @type {string}
     * @memberof CustomFieldCompactAllOf
     */
    'text_value'?: string;
    /**
     * A string representation for the value of the custom field. Integrations that don\'t require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.
     * @type {string}
     * @memberof CustomFieldCompactAllOf
     */
    'display_value'?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum CustomFieldCompactAllOfResourceSubtypeEnum {
    Text = 'text',
    Enum = 'enum',
    MultiEnum = 'multi_enum',
    Number = 'number'
}
/**
    * @export
    * @enum {string}
    */
export enum CustomFieldCompactAllOfTypeEnum {
    Text = 'text',
    Enum = 'enum',
    MultiEnum = 'multi_enum',
    Number = 'number'
}


